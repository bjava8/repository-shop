/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.29
 * Generated at: 2018-06-01 06:43:42 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class order_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/purplike/shop/workspace-shop/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/Project_Shop/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1517795701772L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, false, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("\t<title>order</title>\n");
      out.write("\t\n");
      out.write("\t<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js\"></script>\n");
      out.write("\t<script src=\"https://service.iamport.kr/js/iamport.payment-1.1.5.js\"></script>\n");
      out.write("<script>\n");
      out.write("function requestImp() {\n");
      out.write("\talert(\"requestImp\");\n");
      out.write("}\n");
      out.write("/* $(document).ready(function(){\n");
      out.write("    $(\"button\").click(function(){\n");
      out.write("//         $(\"p\").hide();\n");
      out.write("\n");
      out.write("    });\n");
      out.write("}); */\n");
      out.write("</script>\n");
      out.write("<!-- \n");
      out.write("<script src=\"https://code.jquery.com/jquery-1.12.4.min.js\" ></script>\n");
      out.write("Do you wonder why we do not have type=\"text/javascript\" inside the <script> tag?\n");
      out.write("\n");
      out.write("This is not required in HTML5. -->\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${product.name }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write('\n');
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${product.id }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write('\n');
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${product.price }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\n");
      out.write("수량\n");
      out.write("판매금액\n");
      out.write("주문자 정보\n");
      out.write("주소..\n");
      out.write("<form action=\"#\" method=\"post\">\n");
      out.write("<input type=\"hidden\" name=\"TOTAL_PAY_PRICE_HIDDEN\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${product.price }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\n");
      out.write("결제 선택..\n");
      out.write("<button type=\"submit\">결제하기</button>\n");
      out.write("<button onclick=\"requestImp()\">결제하기</button>\n");
      out.write("</form>\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("var IMP = window.IMP; // 생략가능\n");
      out.write("IMP.init('imp93158137'); // 가맹점 식별코드\n");
      out.write("\n");
      out.write("\n");
      out.write("/*\n");
      out.write("\n");
      out.write("IMP.request_pay({\n");
      out.write("    pg : 'inicis', // version 1.1.0부터 지원.\n");
      out.write("    pay_method : 'card',\n");
      out.write("    merchant_uid : 'merchant_' + new Date().getTime(),\n");
      out.write("    name : '주문명:결제테스트',\n");
      out.write("    amount : 14000,\n");
      out.write("    buyer_email : 'iamport@siot.do',\n");
      out.write("    buyer_name : '구매자이름',\n");
      out.write("    buyer_tel : '010-1234-5678',\n");
      out.write("    buyer_addr : '서울특별시 강남구 삼성동',\n");
      out.write("    buyer_postcode : '123-456',\n");
      out.write("    m_redirect_url : 'https://www.yourdomain.com/payments/complete'\n");
      out.write("}, function(rsp) {\n");
      out.write("    if ( rsp.success ) {\n");
      out.write("        var msg = '결제가 완료되었습니다.';\n");
      out.write("        msg += '고유ID : ' + rsp.imp_uid;\n");
      out.write("        msg += '상점 거래ID : ' + rsp.merchant_uid;\n");
      out.write("        msg += '결제 금액 : ' + rsp.paid_amount;\n");
      out.write("        msg += '카드 승인번호 : ' + rsp.apply_num;\n");
      out.write("    } else {\n");
      out.write("        var msg = '결제에 실패하였습니다.';\n");
      out.write("        msg += '에러내용 : ' + rsp.error_msg;\n");
      out.write("    }\n");
      out.write("    alert(msg);\n");
      out.write("}); */\n");
      out.write("\n");
      out.write("$( \"form\" ).submit(function() {\n");
      out.write("\t\n");
      out.write("\tIMP.request_pay({\n");
      out.write("\t    pg : 'payco', \n");
      out.write("\t    pay_method : 'card',\n");
      out.write("\t    merchant_uid : 'merchant_' + new Date().getTime(),\n");
      out.write("\t    name : '주문명:결제테스트',\n");
      out.write("\t    amount : 14000,\n");
      out.write("\t    buyer_email : 'iamport@siot.do',\n");
      out.write("\t    buyer_name : '구매자이름',\n");
      out.write("\t    buyer_tel : '010-1234-5678',\n");
      out.write("\t    buyer_addr : '서울특별시 강남구 삼성동',\n");
      out.write("\t    buyer_postcode : '123-456',\n");
      out.write("// \t    m_redirect_url : 'https://www.yourdomain.com/payments/complete' 모바일 결제시에만 사용\n");
      out.write("\t}, function(rsp) {\n");
      out.write("\t    if ( rsp.success ) { // 결제 성공 시: 결제 승인 또는 가상계좌 발급에 성공한 경우\n");
      out.write("\t    \talert(\"[success]\"+rsp);\n");
      out.write("\t    \tconsole.log(rsp);\n");
      out.write("\t    \t//[1] 서버단에서 결제정보 조회를 위해 jQuery ajax로 imp_uid 전달하기\n");
      out.write("\t        var msg = '결제가 완료되었습니다.';\n");
      out.write("\t        msg += '고유ID : ' + rsp.imp_uid;\n");
      out.write("\t        msg += '상점 거래ID : ' + rsp.merchant_uid;\n");
      out.write("\t        msg += '결제 금액 : ' + rsp.paid_amount;\n");
      out.write("\t        msg += '카드 승인번호 : ' + rsp.apply_num;\n");
      out.write("\t    } else {\n");
      out.write("\t        var msg = '결제에 실패하였습니다.';\n");
      out.write("\t        msg += '에러내용 : ' + rsp.error_msg;\n");
      out.write("\t    }\n");
      out.write("\t    alert(msg);\n");
      out.write("\t});\n");
      out.write("});\n");
      out.write("\n");
      out.write("\n");
      out.write("/* $( \"form\" ).submit(function( event ) {\n");
      out.write("\t  \n");
      out.write("}); */\n");
      out.write("</script>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
